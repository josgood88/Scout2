Background
For over a decade, CCHR Sacramento has used software to evaluate bills that are before the California legislature.  There have been three versions of this software – Coyote, Circus and Scout.

Coyote was designed for use by someone other than the developer.  Circus was not and the first version of Scout was not.

Scout2 is intended to 
* be usable by someone other than the developer, and
* be extensible/repairable by someone other than the current developer.

Scout2 is being prepared for eventual hand-off.  As of this writing, hand-off is not imminent.

Goals & Objectives
There are two roles with needs to be addressed.  Those roles are user and developer.

User needs:
* The software must be easily accessible.  This may mean that it is available on AWS or another platform.  It may mean that it is available for download or other distribution.  It may mean both.  That needs to be established.
* The software should automate as much of the process as possible.
* A user’s guide
* A guide on evaluating legislative bills

Developer needs:
* These requirements
* Design documentation
* Test cases
* Source code
Business Case
I won’t be here forever.
Assumptions
In Scope
* Platform: Windows or AWS, depending on survey results
* Language: C# because that’s what Scout1 is written in and because it is well known
* Reports: On demand, creates canonical individual report for bill, allows editing
* Reports: On demand, generates weekly report from database and individual bill reports
Out of Scope
* Platform: Linux, Azure, etc.
* Language: C++, Rust, Python, etc.
Constraints
Constraints such as time, budget, resources, tools and environments


Functional Requirements

ID: F0001Last Edit: 29 Jan 2020Status: ProposedName: Functional RequirementsExtends: 
ID: SQ0001Last Edit: 29 Jan 2020Status: ProposedName: SequenceExtends: F0001Scout implements a sequence of actions which are
1. Download the appropriate data from the legislature site.
2. Organize that data for processing
3. Compute scores for each downloaded bill.
4. Bring existing bill reports up to date, consistent with the downloaded data.
5. Give the user an opportunity to update any bill reports that changed when bills were updated.
6. Give the user an opportunity to create new bill reports
7. Generate the weekly report.
ID: SQ0002Last Edit: 29 Jan 2020Status: ProposedName: Download zip fileExtends: SQ0001Scout downloads the latest zip file from the legislative site http://leginfo.legislature.ca.gov/.
ID: SQ0003Last Edit: 29 Jan 2020Status: ProposedName: Organize for processingExtends: SQ0001Scout extracts some of the table data files and the latest text files from the downloaded zip file.
ID: SQ0004Last Edit: 29 Jan 2020Status: ProposedName: ScoresExtends: SQ0003Scout computes scores for each downloaded bill.
ID: SQ0005Last Edit: 29 Jan 2020Status: ProposedName: Update Bill ReportsExtends: SQ0001Scout brings existing bill reports up to date, consistent with the downloaded data.
ID: SQ0006Last Edit: 29 Jan 2020Status: ProposedName: User Update ReportsExtends: SQ0001Scout gives the user an opportunity to update any bill reports that changed when bills were updated.
ID: SQ0007Last Edit: 29 Jan 2020Status: ProposedName: User Create ReportsExtends: SQ0001Scout gives the user an opportunity to create new bill reports.
ID: SQ0009Last Edit: 29 Jan 2020Status: ProposedName: Weekly ReportsExtends: SQ0001Scout generates the weekly report.
ID: DZ0001Last Edit: 30 Jan 2020Status: ProposedName: Correct Zip FileExtends: SQ0002Select the zip file with the latest date.
ID: DZ0002Last Edit: 30 Jan 2020Status: ProposedName: Zip File DestinationExtends: SQ0002Specified at design time.
ID: DZ0003Last Edit: 30 Jan 2020Status: ProposedName: On Starting DownloadExtends: SQ0002Show progress by indicating that the download has started.
ID: DZ0004Last Edit: 30 Jan 2020Status: ProposedName: On Completing DownloadExtends: SQ0002Show progress by indicating that the download has comleted.
ID: OP0001Last Edit: 30 Jan 2020Status: ProposedName: No Data Carry-OverExtends: SQ0003Expect each new Legislature data file to contain arbitrary changes in the data files.  (The files are accurate, but the same revision of a bill may be in a different .lob file).
ID: OP0002Last Edit: 30 Jan 2020Status: ProposedName: Replace Text FilesExtends: OP0001Replace all bill text files with fresh content from downloaded zip file.
ID: OP0003Last Edit: 30 Jan 2020Status: ProposedName: Replace Table FilesExtends: OP0001Replace all bill table file with fresh content from downloaded zip file.


Non-Functional Requirements

ID: NF0001Last Edit: 29 Jan 2020Status: ProposedName: Non-Functional RequirementsExtends:
ID: NF0002Last Edit: 29 Jan 2020Status: ProposedName: BillRowsExtends: NF0001Scout maintains a database table where each row describes a bill.
ID: NF0003Last Edit: 29 Jan 2020Status: ProposedName: BillRows PersistenceExtends: NF0001The table described in “BillRows” persists between Scout runs.
ID: BR0001Last Edit: 30 Jan 2020Status: ProposedName: From BILL_TBL.datExtends: NF0002Bill_Tbl.dat (from zip file) contains several items (e.g., Measure, Version, Location, etc.) that are useful in generating or updating an individual bill report.
ID: BR0002Last Edit: 30 Jan 2020Status: ProposedName: Position TakenExtends: NF0002When updating a bill, the position being taken on the bill is available from the extant bill report.




Glossary of Terms




https://simplicable.com/new/requirements
Behavioral Requirements
User Interfaces
Business Requirements
User Stories
As a type-of-user, I want function so that goal.
Business Rules
If X happens then do Y
Functional Requirements
Consistent, cohesive, complete, atomic, verifiable
Business Rules
Calculations
Process Flows
Use Cases
Non-Functional Requirements
Qualities and characteristics
Performance Requirements
Operational Requirements

0Scout2 Requirements0

